package commoncrawl

import mock "github.com/stretchr/testify/mock"

// MockInputSource is an autogenerated mock type for the InputSource type
type MockInputSource struct {
	mock.Mock
}

// AbortedWorkItemsInput provides a mock function with given fields:
func (_m *MockInputSource) AbortedWorkItemsInput() chan<- string {
	ret := _m.Called()

	var r0 chan<- string
	if rf, ok := ret.Get(0).(func() chan<- string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan<- string)
		}
	}

	return r0
}

// CompletedWorkItemsInput provides a mock function with given fields:
func (_m *MockInputSource) CompletedWorkItemsInput() chan<- string {
	ret := _m.Called()

	var r0 chan<- string
	if rf, ok := ret.Get(0).(func() chan<- string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan<- string)
		}
	}

	return r0
}

// Run provides a mock function with given fields:
func (_m *MockInputSource) Run() {
	_m.Called()
}

// WorkItemsOutput provides a mock function with given fields:
func (_m *MockInputSource) WorkItemsOutput() <-chan *WorkItem {
	ret := _m.Called()

	var r0 <-chan *WorkItem
	if rf, ok := ret.Get(0).(func() <-chan *WorkItem); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan *WorkItem)
		}
	}

	return r0
}
